A language, in a broad sense, is a system of communication that uses symbols (such as words, gestures, or symbols) and rules to convey meaning. Languages can be spoken, written, or signed, and they are essential for human communication and the expression of thoughts, ideas, and emotions.

Formal languages, on the other hand, have specific characteristics that distinguish them from natural languages (like English or Spanish). In the context of computer science, mathematics, and logic, a formal language is a well-defined set of symbols and rules for manipulating those symbols. Here are some key features that a language needs to have in order to be considered formal:

1. **Alphabet:**
   - A formal language has an alphabet, which is a finite set of symbols or characters that are used to construct expressions or statements in the language.

2. **Syntax:**
   - A formal language has a syntax that defines the rules for constructing valid expressions or statements. Syntax specifies the arrangement and combination of symbols to create meaningful structures.

3. **Grammar:**
   - The grammar of a formal language defines the set of rules governing the structure of expressions or statements. It describes how symbols can be combined to create valid constructs within the language.

4. **Semantics:**
   - Semantics deals with the meaning of expressions or statements in the formal language. It defines the relationship between the symbols and the real-world entities they represent or the operations they perform.

5. **Precision:**
   - Formal languages are characterized by precision and lack ambiguity. Every symbol and rule must have a clear and unambiguous interpretation.

6. **Completeness:**
   - The formal language should be complete, meaning that it should be able to express all possible statements or truths within its scope.

7. **Rigor:**
   - Rigor is a high level of accuracy and strict adherence to rules. Formal languages often require rigor in both syntax and semantics to ensure unambiguous interpretation.

8. **Formalism:**
   - Formal languages are often associated with formal systems, which are mathematical or logical structures that provide a foundation for reasoning about the language.

Examples of formal languages include programming languages (like Java, Python, or C++), mathematical notations (like set theory or propositional logic), and markup languages (like HTML or XML). These languages play a crucial role in various fields, providing a precise and structured way to express information and carry out computations.